# demonstration of basic looping in Numberrain
# first loop adds the first 5 positive integers (1 + 2 + 3 + 4 + 5) - should yield 15
# second loop adds the first 5 perfect squares - should yield 55
# third loop breaks out 'prematurely' after summing the first 5 perfect cubes - should yield 100
# fourth loop adds all positive even integers up to 20 - should yield 110

!PRECISION 100

BEGIN;

# just assign 0 to variable 'sum'
NOP 0;
ASSIGN sum;

# simple for loop
FOR i 1 6 1;
	ADD sum i;
	ASSIGN sum;
ENDFOR;

PRINT "first 5 positive integers sum is " sum;

NOP 0;
ASSIGN sum2;

NOP 5;
ASSIGN num;

# simple while loop
WHILE num > 0;
	EXP num 2;
	ADD sum2 result;
	ASSIGN sum2;

	MUTE;
	SUB num 1;
	ASSIGN num;
	UNMUTE;
ENDWHILE;

PRINT "perfect square sum is " sum2;

NOP 0;
ASSIGN sum3;

NOP 1;
ASSIGN num;

# cannot do 'WHILE 1' or 'WHILE true' in Numberrain - use an equation that will always be true
# one could use an equation that is always false, but that isn't very useful
WHILE 1 == 1;
	EXP num 3;
	ADD sum3 result;
	ASSIGN sum3;

	MUTE;
	ADD num 1;
	ASSIGN num;
	UNMUTE;

	IF num >= 5;
		BREAK;
	ENDIF;
ENDWHILE;

PRINT "perfect cube sum is " sum3;

NOP 0;
ASSIGN sum4;

NOP 0;
ASSIGN num;

# demonstration of CONTINUE statement to skip over the rest of a loop iteration
WHILE 1 == 1;
	MUTE;
	ADD num 1;
	ASSIGN num;

	MOD num 2;
	IF result != 0;
		CONTINUE;
	ENDIF;
	UNMUTE;

	ADD sum4 num;
	ASSIGN sum4;

	IF num >= 20;
		BREAK;
	ENDIF;
ENDWHILE;

END;
