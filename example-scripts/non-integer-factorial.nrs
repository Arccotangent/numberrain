# evaluate factorials for non-integers using euler's infinite product
# requires a very large amount of terms for good accuracy due to very slow convergence
# because of the large amount of terms, this script takes a considerable amount of time to finish

!PRECISION 100

BEGIN;

DISABLEWORK;

IF argcount < 1;
	PRINT "non-integer-factorial <number>";
	DIE;
ENDIF;

# customize

NOP arg_0;
ASSIGN arg;

NOP 250000;
ASSIGN terms;

# begin calculation

MUTE; # no one is going to go through and read the millions of lines of work done by this loop

NOP 1;
ASSIGN res;

# increment term amount for the loop so we actually do the amount of terms set above and not one less
ADD 1 terms;
ASSIGN terms;

FOR k 1 terms 1;
	DIV 1 k;
	ADD 1 result;
	EXP result arg;
	ASSIGN numer;

	DIV arg k;
	ADD 1 result;
	ASSIGN denom;

	DIV numer denom;
	ASSIGN term;

	MUL res term;
	ASSIGN res;

	# print a progress report every 10,000 terms
	MOD k 10000;
	IF result == 0;
		PRINT "finished term " k; # PRINT statements are unaffected by MUTE/UNMUTE
	ENDIF;
ENDFOR;

ROUND arg;
ASSIGN argInt;

# check if our argument is an integer - then we can compare against real factorial value
IF arg == argInt;
	FCT argInt;
	ASSIGN realFactorial; # snag this value for later

    SUB result res; # result register isn't cleared - we can keep working as if the above ASSIGN statement wasn't there
    ABS result;
    DIV result realFactorial;
    MUL result 100;
    ASSIGN error;

    PRINT "";
    PRINT "factorial of " arg " is approximately " res;
    PRINT "real factorial of " arg " is " realFactorial;
    PRINT "the percent error is " error "%";
    PRINT "";
ELSE;
	PRINT "";
    PRINT "factorial of " arg " is approximately " res;
    PRINT "";
ENDIF;

END;
